---
interface RecipeFrontmatter {
  title?: string;
  url?: string;
}

const recipeImports = import.meta.glob('../pages/recipes/*.md');
const recipes = await Promise.all(
  Object.entries(recipeImports).map(async ([path, resolver]) => {
    const mod = (await resolver()) as { url: string; frontmatter: RecipeFrontmatter };
    return {
      title: mod.frontmatter.title,
      url: mod.url,
    };
  })
);
---

<nav class="bg-white border-b shadow-sm">
  <div class="max-w-6xl mx-auto px-4 sm:px-6 lg:px-8">
    <div class="flex justify-between h-16">
      <div class="flex items-center">
        <a href="/" class="text-xl font-bold text-gray-900 hover:text-yellow-600 transition-colors">
          My Recipe Website
        </a>
      </div>
      
      <!-- Desktop Navigation -->
      <div class="hidden md:flex items-center space-x-8">
        <a href="/" class="text-gray-700 hover:text-yellow-600 transition-colors">
          Home
        </a>
        <div class="relative group">
          <button class="text-gray-700 hover:text-yellow-600 transition-colors flex items-center">
            Recipes
            <svg class="ml-1 h-4 w-4" fill="currentColor" viewBox="0 0 20 20">
              <path fill-rule="evenodd" d="M5.293 7.293a1 1 0 011.414 0L10 10.586l3.293-3.293a1 1 0 111.414 1.414l-4 4a1 1 0 01-1.414 0l-4-4a1 1 0 010-1.414z" clip-rule="evenodd" />
            </svg>
          </button>
          <div class="absolute right-0 mt-2 w-56 bg-white rounded-md shadow-lg opacity-0 invisible group-hover:opacity-100 group-hover:visible transition-all duration-200 z-50">
            <div class="py-1 max-h-64 overflow-y-auto">
              {recipes.slice(0, 8).map(recipe => (
                <a href={recipe.url} class="block px-4 py-2 text-sm text-gray-700 hover:bg-yellow-50 hover:text-yellow-600 transition-colors">
                  {recipe.title}
                </a>
              ))}
              {recipes.length > 8 && (
                <a href="/" class="block px-4 py-2 text-sm text-yellow-600 font-medium border-t">
                  View All Recipes â†’
                </a>
              )}
            </div>
          </div>
        </div>
        <a href="/tags" class="text-gray-700 hover:text-yellow-600 transition-colors">
          Tags
        </a>
      </div>

      <!-- Mobile menu button -->
      <div class="md:hidden flex items-center">
        <button 
          id="mobile-menu-button"
          class="text-gray-700 hover:text-yellow-600 focus:outline-none"
          aria-label="Toggle mobile menu"
        >
          <svg class="h-6 w-6" fill="none" stroke="currentColor" viewBox="0 0 24 24">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 6h16M4 12h16M4 18h16"></path>
          </svg>
        </button>
      </div>
    </div>
  </div>

  <!-- Mobile Navigation -->
  <div id="mobile-menu" class="md:hidden hidden bg-white border-t">
    <div class="px-2 pt-2 pb-3 space-y-1">
      <a href="/" class="block px-3 py-2 text-base font-medium text-gray-700 hover:text-yellow-600 hover:bg-yellow-50 rounded-md transition-colors">
        Home
      </a>
      <div class="px-3 py-2">
        <div class="text-base font-medium text-gray-900 mb-2">Recipes</div>
        <div class="pl-4 space-y-1 max-h-48 overflow-y-auto">
          {recipes.map(recipe => (
            <a href={recipe.url} class="block py-1 text-sm text-gray-600 hover:text-yellow-600 transition-colors">
              {recipe.title}
            </a>
          ))}
        </div>
      </div>
      <a href="/tags" class="block px-3 py-2 text-base font-medium text-gray-700 hover:text-yellow-600 hover:bg-yellow-50 rounded-md transition-colors">
        Tags
      </a>
    </div>
  </div>
</nav>

<script>
  document.addEventListener('DOMContentLoaded', () => {
    const button = document.getElementById('mobile-menu-button');
    const menu = document.getElementById('mobile-menu');
    
    if (button && menu) {
      button.addEventListener('click', () => {
        menu.classList.toggle('hidden');
      });
    }
  });
</script>