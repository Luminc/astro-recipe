---
import Layout from '../../layouts/Layout.astro';
import ResponsiveNav from '../../components/ResponsiveNav.astro';
import Footer from '../../components/Footer.astro';
import RecipeFilter from '../../components/RecipeFilter.jsx';
import { getTranslation } from '../../lib/i18n';

interface RecipeFrontmatter {
  title?: string;
  date?: string;
  tags?: string[];
  description?: string;
  image?: string;
  prepTime?: string;
  cookTime?: string;
  totalTime?: string;
  yield?: string;
  [key: string]: any;
}
interface RecipeModule {
  url: string;
  frontmatter: RecipeFrontmatter;
}

const locale = 'nl';
const t = getTranslation(locale);

const recipeImports = import.meta.glob('./recipes/*.md');
const recipeEntries = await Promise.all(
  Object.entries(recipeImports).map(async ([path, resolver]) => {
    const mod = (await resolver()) as { url: string; frontmatter: RecipeFrontmatter };
    return {
      url: mod.url,
      frontmatter: mod.frontmatter,
    };
  })
);
const recipes: RecipeModule[] = recipeEntries.sort((a, b) => (b.frontmatter.date || '').localeCompare(a.frontmatter.date || ''));
---

<Layout locale={locale}>
  <ResponsiveNav slot="nav" locale={locale} />
  <main class="max-w-6xl mx-auto p-6">
    <h1 class="text-3xl font-bold mb-6">{t.home.title}</h1>
    <RecipeFilter client:idle recipes={recipes} translations={t} />
  </main>
  <Footer slot="footer" />
</Layout>